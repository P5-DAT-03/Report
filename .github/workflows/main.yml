name: Typst build check

on:
  pull_request:
    branches: [ main ]
    paths:
      - "*.typ"
      - "**/*.typ"
      - ".github/workflows/typst-check.yml"
  push:
    branches: [ main ]
    paths:
      - "*.typ"
      - "**/*.typ"
      - ".github/workflows/typst-check.yml"

jobs:
  build:
    name: Compile Typst files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Typst
        uses: typst-community/setup-typst@v4
        with:
          typst-version: latest

      - name: Find entrypoints
        id: targets
        run: |
          set -e
          mkdir -p build
          mapfile -t FILES < <(git ls-files '*.typ' '**/*.typ' | grep -v '^_' | grep -v '/_')
          if [ ${#FILES[@]} -eq 0 ]; then
            echo "targets=" >> $GITHUB_OUTPUT
          else
            printf 'targets=%s\n' "${FILES[*]}" >> $GITHUB_OUTPUT
          fi

      - name: Compile
        if: steps.targets.outputs.targets != ''
        run: |
          set -e
          mkdir -p build

          # Start with the discovered targets
          FILES="${{ steps.targets.outputs.targets }}"

          # Ensure main.typ is included even if filters missed it
          if [ -f "main.typ" ] && ! grep -q -w "main.typ" <<< "$FILES"; then
            FILES="$FILES main.typ"
          fi

          for f in $FILES; do
            # Normalize to .typ files only
            case "$f" in
              *.typ) :
                ;;
              *) continue ;;
            esac

            if [ ! -f "$f" ]; then
              echo "Skipping missing file: $f"
              continue
            fi

            out="build/${f%.typ}.pdf"
            mkdir -p "$(dirname "$out")"
            echo "Compiling $f -> $out"
            typst compile "$f" "$out"
          done
          
      - name: Upload PDFs
        if: steps.targets.outputs.targets != ''
        uses: actions/upload-artifact@v4
        with:
          name: typst-main-pdf
          path: build/main.pdf
